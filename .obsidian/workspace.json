{
  "main": {
    "id": "9e71cd8d640c6c71",
    "type": "split",
    "children": [
      {
        "id": "12a07c3d0bab0e5e",
        "type": "tabs",
        "children": [
          {
            "id": "b051a08796ef8944",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/057.多重背包、混合背包.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "a85a629b63811950",
            "type": "leaf",
            "state": {
              "type": "excalidraw",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举1.excalidraw.md"
              }
            }
          },
          {
            "id": "d43d73d1ebd10c2c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "工具/Markdown/markdown公式.md",
                "mode": "preview",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "b97e0061cd940eb9",
            "type": "leaf",
            "state": {
              "type": "excalidraw",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/drawing/01bfs 为什么不能用传统 bfs.excalidraw.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "b19a73537da9b572",
    "type": "split",
    "children": [
      {
        "id": "bac65ce8506507cf",
        "type": "tabs",
        "children": [
          {
            "id": "100ae5ead0fcd227",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "5f3cb13b699d40c0",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "最后一块石头的重量 II",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "8f950ef5f81d39ec",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 277.5
  },
  "right": {
    "id": "5e9aaa0ee861ee89",
    "type": "split",
    "children": [
      {
        "id": "da5e1a9083534fe4",
        "type": "tabs",
        "children": [
          {
            "id": "9b23216657527877",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/057.多重背包、混合背包.md"
              }
            }
          },
          {
            "id": "d2325d00e6a1d478",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/057.多重背包、混合背包.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "149d0a94ffa6b148",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/057.多重背包、混合背包.md",
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "0b76affd08e30f33",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          },
          {
            "id": "7026712e83a97b39",
            "type": "leaf",
            "state": {
              "type": "file-properties",
              "state": {
                "file": "数据结构与算法/004.左程云算法通关/002.必备/057.多重背包、混合背包.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 271.5
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:打开快速切换": false,
      "graph:查看关系图谱": false,
      "command-palette:打开命令面板": false,
      "templates:插入模板": false,
      "workspaces:管理工作区布局": false,
      "random-note:开始漫游笔记": false,
      "oz-clear-unused-images:Clear Unused Images": false,
      "cmdr:导出为 PDF": false,
      "obsidian-excalidraw-plugin:新建绘图文件": false
    }
  },
  "active": "b051a08796ef8944",
  "lastOpenFiles": [
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/01bfs 为什么不能用传统 bfs.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举3.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举1.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举3.excalidraw.svg",
    "数据结构与算法/004.左程云算法通关/002.必备/057.多重背包、混合背包.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举2.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/01bfs.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举2.excalidraw.svg",
    "工具/Markdown/markdown公式.md",
    "数据结构与算法/004.左程云算法通关/002.必备/004.归并分治.md",
    "数据结构与算法/004.左程云算法通关/002.必备/003.归并排序.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/多重背包通过单调队列优化枚举1.excalidraw.svg",
    "数据结构与算法/004.左程云算法通关/002.必备/056.分组背包、完全背包.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/有一次修改机会的最长不下降子序列.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/通配符匹配.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/正则表达式匹配.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/并查集.excalidraw.md",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/通配符匹配.excalidraw.svg",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/assets/Pasted Image 20240301103400_605.png",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/正则表达式匹配.excalidraw.svg",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/assets/Pasted Image 20240301091004_405.png",
    "数据结构与算法/学习规划.md",
    "数据结构与算法/004.左程云算法通关/002.必备/055.01背包、有依赖的背包.md",
    "数据结构与算法/004.左程云算法通关/002.必备/assets/Pasted image 20240229144027.png",
    "数据结构与算法/004.左程云算法通关/002.必备/050.见识更多二维动态规划题目.md",
    "数据结构与算法/004.左程云算法通关/002.必备/049.从递归入手二维动态规划.md",
    "数据结构与算法/004.左程云算法通关/002.必备/007.堆结构和堆排序.md",
    "数据结构与算法/004.左程云算法通关/002.必备/053.子数组最大累加和问题与扩展-下.md",
    "数据结构与算法/004.左程云算法通关/002.必备/054.最长递增子序列问题与扩展.md",
    "数据结构与算法/003.LeetCodeHot100/013.堆/001.数组中的第K个最大元素.md",
    "数据结构与算法/003.LeetCodeHot100/013.堆/000.Go标准库中的堆.md",
    "数据结构与算法/003.LeetCodeHot100/013.堆/003.数据流的中位数.md",
    "数据结构与算法/004.左程云算法通关/999.个人补充/003.Go标准库中的容器.md",
    "数据结构与算法/001.代码随想录/010.动态规划/000.动态规划.pdf",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/有一次修改机会的最长不下降子序列.excalidraw.svg",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/assets/Pasted Image 20240221095455_691.png",
    "数据结构与算法/004.左程云算法通关/002.必备/drawing/assets",
    "语言学习/Java/004.SSM/assets",
    "语言学习/Java/004.SSM",
    "语言学习/Java/003.JDBC/assets",
    "语言学习/Java/003.JDBC",
    "语言学习/Java/002.Java Web/assets",
    "语言学习/Java/002.Java Web",
    "语言学习/Java/001.JavaSE 语言基础/题目与扩展/assets",
    "语言学习/Java/001.JavaSE 语言基础/题目与扩展",
    "未命名.canvas",
    "前端学习，漫漫长路/未命名.canvas",
    "数据结构与算法/代码随想录/链表/未命名.canvas"
  ]
}